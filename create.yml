---

- name: Cisco Intersight Create
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files: main.yml
  tasks:


  ## SERVERS

    # - name: Claim new Server
    #   cisco.intersight.intersight_target_claim:
    #     api_uri: "{{ intersight_endpoint }}"
    #     api_private_key: "{{ intersight_privatekey }}"
    #     api_key_id: "{{ intersight_apikeyid }}"
    #     device_id: "{{ device_id }}"
    #     claim_code: "{{ claim_code }}"
    #     state: present
    #   register: claim_server

    - name: Get info for all servers
      cisco.intersight.intersight_info:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        server_names:
      register: server_names


  ## POOLS

    - name: Create IP Pool
      cisco.intersight.intersight_rest_api:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        resource_path: /ippool/Pools
        api_body: {
          "Name": "{{ ip_pool_name }}",
          "Description": "{{ ip_pool_description }}",
          "IpV4Config": {
            "Netmask": "{{ ip_pool_ipv4.netmask }}",
            "Gateway": "{{ ip_pool_ipv4.gateway }}",
            "PrimaryDns": "{{ ip_pool_ipv4.primary_dns }}",
            "SecondaryDns": "{{ ip_pool_ipv4.secondary_dns }}"
            },
          "IpV4Blocks": [ 
            {
              "From": "{{ ip_pool_ipv4.from }}",
              "Size": '{{ ip_pool_ipv4.size }}'
            }
            ],
          "AssignmentOrder": "default"
        }
        state: present
      register: dc1_ip_pool


  ## POLICIES

    - name: Create Local User Policy
      cisco.intersight.intersight_local_user_policy:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        name: "{{ local_user_policy_name }}"
        description: "{{ local_user_policy_description }}"
        local_users: "{{ local_user_policy_local_users }}"
        state: present
      register: local_user_policy

    - name: Create BIOS Policy
      cisco.intersight.intersight_bios_policy:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        name: "{{ bios_policy_name }}"
        description: "{{ bios_policy_description }}"
        processor_cstate: "{{ bios_policy_options.processor_cstate }}"
        cdn_enable: "{{ bios_policy_options.cdn_enable }}"
        cpu_energy_performance: "{{ bios_policy_options.cpu_energy_performance }}"
        direct_cache_access: "{{ bios_policy_options.direct_cache_access }}"
        state: present
      register: bios_policy

    - name: Create Boot Order Policy
      cisco.intersight.intersight_boot_order_policy:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        name: "{{ boot_order_policy_name }}"
        description: "{{ boot_order_policy_description }}"
        configured_boot_mode: "{{ boot_order_policy_configured_boot_order }}"
        boot_devices: "{{ boot_order_policy_boot_devices }}"
        state: present
      register: boot_order_policy

    - name: Create NTP Policy
      cisco.intersight.intersight_ntp_policy:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        name: "{{ ntp_policy_name }}"
        description: "{{ ntp_policy_description }}"
        ntp_servers: "{{ ntp_policy_servers }}" 
        timezone: "{{ ntp_policy_timezone }}" 
        state: present
      register: ntp_policy
        
    - name: Create IMC Access Policy
      cisco.intersight.intersight_imc_access_policy:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        name: "{{ imc_access_policy_name }}" 
        description: "{{ imc_access_policy_description }}"
        ip_pool: "{{ imc_access_policy_ip_pool }}"
        vlan_id: "{{ imc_access_policy_vlan_id }}"
        state: present
      register: imc_access_policy

    - name: Create Virtual Media Policy
      cisco.intersight.intersight_virtual_media_policy:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        name: "{{ virtual_media_policy_name }}"
        description: "{{ virtual_media_policy_description }}"
        cdd_virtual_media: "{{ virtual_media_policy_cdd_virtual_media }}"
        hdd_virtual_media: "{{ virtual_media_policy_hdd_virtual_media }}"
        state: present
      register: virtual_media_policy


  ## PROFILES

    - name: Create Server Profile
      cisco.intersight.intersight_server_profile:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        name: "{{ server_profile_name }}"
        description: "{{ server_profile_description }}"
        target_platform: "{{ server_profile_target_platform }}"
        # assigned_server: "{{ server_profile_assigned_server }}"
        boot_order_policy: "{{ server_profile_boot_order_policy }}"
        imc_access_policy: "{{ server_profile_imc_access_policy }}"
        local_user_policy: "{{ server_profile_local_user_policy }}"
        ntp_policy: "{{ server_profile_ntp_policy }}"
        virtual_media_policy: "{{ server_profile_virtual_media_policy }}"
        # storage_policy: "{{ server_profile_storage_policy }}"
        # lan_connectivity_policy: "{{ server_profile_lan_connectivity_policy }}"
        state: present
      register: server_profile


  ## TEMPLATES

    - name: Create Server Profile Template
      cisco.intersight.intersight_rest_api:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        resource_path: /server/ProfileTemplates
        api_body: {
          "Name": "server-profile-template",
          "Description": "Server Profile Template",
          "TargetPlatform": "FIAttached",
          "PolicyBucket": [
            {
              "Moid": "{{ ntp_policy.api_response.Moid }}",
              "ObjectType": "ntp.Policy"
            },
            {
              "Moid": "{{ imc_access_policy.api_response.Moid }}",
              "ObjectType": "access.Policy"
            },
            {
              "Moid": "{{ virtual_media_policy.api_response.Moid }}",
              "ObjectType": "vmedia.Policy"
            },
            {
              "Moid": "{{ boot_order_policy.api_response.Moid }}",
              "ObjectType": "boot.PrecisionPolicy"
            },
            {
              "Moid": "{{ bios_policy.api_response.Moid }}",
              "ObjectType": "bios.Policy"
            }
          ]       
        }
        state: present
      register: server_profile_template

    - name: Derive Server Profile Template into Server Profile
      cisco.intersight.intersight_rest_api:
        api_uri: "{{ intersight_endpoint }}"
        api_private_key: "{{ intersight_privatekey }}"
        api_key_id: "{{ intersight_apikeyid }}"
        resource_path: /bulk/MoCloners
        update_method: post
        api_body: {
          "Sources": [
            {
              "ClassId": "mo.MoRef",
              "ObjectType": "server.ProfileTemplate",
              "Moid": "{{ server_profile_template.api_response.Moid }}"
            }
          ],
          "Targets": [
            {
              "Name": "server-profile-template-{{ item }}",
              "ObjectType": "server.Profile",
              "Organization": {
                "Moid": "{{ server_profile_template.api_response.Organization.Moid }}"
              },
              "ClassId": "server.Profile"
            }
          ]
        }
        state: present
      loop: "{{ range(1, 3) | list }}"